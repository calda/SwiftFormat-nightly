name: Nightly Release

on:
  schedule:
    # Runs at midnight UTC
    - cron: '0 0 * * *'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      tag_suffix:
        description: 'Optional build suffix (b, c, d, etc) if the default tag for this date already exists'
        required: false
        default: ''
        type: string

jobs:
  sync-develop:
    runs-on: ubuntu-latest
    outputs:
      changes_made: ${{ steps.check_changes.outputs.changes_made }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Add Remote Repository
        run: |
          git remote add upstream https://github.com/nicklockwood/SwiftFormat.git
          git remote -v

      - name: Fetch from Upstream
        run: |
          git fetch upstream

      - name: Check if develop branch matches upstream
        id: check_changes
        run: |
          LOCAL_COMMIT=$(git rev-parse HEAD)
          UPSTREAM_COMMIT=$(git rev-parse upstream/develop)
          
          echo "Local commit: $LOCAL_COMMIT"
          echo "Upstream commit: $UPSTREAM_COMMIT"

          if [ "$LOCAL_COMMIT" = "$UPSTREAM_COMMIT" ]; then
            echo "Develop branch is already in sync with upstream. No changes needed."
            echo "changes_made=false" >> $GITHUB_OUTPUT
          else
            echo "Develop branch differs from upstream. Changes will be made."
            echo "changes_made=true" >> $GITHUB_OUTPUT

            # Reset to upstream
            git reset --hard upstream/develop

            # Force Push Changes
            git push origin develop --force
          fi

  create-release:
    needs: sync-develop
    if: needs.sync-develop.outputs.changes_made == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          persist-credentials: false
          
      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          
      - name: Generate Tag Name
        id: tag_date
        run: |
          SUFFIX="${{ github.event.inputs.tag_suffix }}"
          DATE=$(date +'%Y-%m-%d')
          FORMATTED_DATE=$(date +'%B %-d, %Y')
          
          # The tag name must start with a number, because we use the tag name as the version number when building the SwiftFormat binary.
          if [ -n "$SUFFIX" ]; then
            TAG_NAME="${DATE}-${SUFFIX}"
          else
            TAG_NAME="${DATE}"
          fi
          
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "FORMATTED_DATE=$FORMATTED_DATE" >> $GITHUB_ENV
          
      - name: Create Tag
        run: |
          git tag ${{ env.TAG_NAME }}
          
      - name: Push Tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          branch: refs/tags/${{ env.TAG_NAME }}
          force: true
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.TAG_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          body: |
            Nightly build of the SwiftFormat `develop` branch on ${{ env.FORMATTED_DATE }}.
            
            Nightly builds are subject to breaking changes.

            Source code is available at https://github.com/${{ github.repository }}/tree/${{ env.TAG_NAME }}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}